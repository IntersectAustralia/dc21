- content_for :breadcrumb do
  %h1 Admin / System Configuration / Edit

.container
  = form_for [:admin, @config], :url => {action: "update"} do |f|
    = render "shared/error_messages", :target => @config
    %h2 Edit System Configuration
    .control-group
      = f.label :name , "Local System Name", class: "control-label"
      .controls
        = required
        = f.text_field :name
    .control-group
      = f.label :research_centre_name , "Research Centre Name", class: "control-label"
      .controls
        = required
        = f.text_field :research_centre_name
    .control-group
      = f.label :entity , "Overarching Entity", class: "control-label"
      .controls
        = required
        = f.text_field :entity
    .control-group
      = f.label :address1 , "Address", class: "control-label"
      .controls
        = f.text_field :address1, placeholder: 'line 1'
        %br
        = f.text_field :address2, placeholder: 'line 2'
        %br
        = f.text_field :address3, placeholder: 'line 3'
    .control-group
      = f.label :telephone_number , "Telephone Numbers", class: "control-label"
      .controls
        = f.text_field :telephone_number
    .control-group
      = f.label :email , "Email", class: "control-label"
      .controls
        = f.text_field :email
    .control-group
      = f.label :description , "Description", class: "control-label"
      .controls
        = f.text_field :description
    .control-group
      = f.label :urls , "URLs", class: "control-label"
      .controls
        = f.text_field :urls

    .control-group
      = f.label :level1 , "Org. L1 Singular", class: "control-label"
      .controls
        = required
        = f.text_field :level1
    .control-group
      = f.label :level1_plural , "Org. L1 Plural", class: "control-label"
      .controls
        = required
        = f.text_field :level1_plural
    .control-group
      = f.label :level2 , "Org. L2 Singular", class: "control-label"
      .controls
        = required
        = f.text_field :level2
    .control-group
      = f.label :level2_plural , "Org. L2 Plural", class: "control-label"
      .controls
        = required
        = f.text_field :level2_plural
    .control-group
      = f.label :level2_parameters, "L2 Parameters", class: "control-label"
      .controls
        = f.check_box :level2_parameters, {}, 'true', 'false'

    %h2 Edit OCR Processing
    .control-group
      = f.label :auto_ocr_on_upload, "Auto OCR on Upload", class: "control-label"
      .controls
        = f.check_box :auto_ocr_on_upload, {}, 'true', 'false'
    .control-group
      = f.label :auto_ocr_regex, "Auto OCR Regular Expression", class: "control-label"
      .controls
        = f.text_field :auto_ocr_regex
    .control-group#ocr_types
      = f.label :supported_ocr_types, "OCR Supported MIME Types", class: "control-label"
      .controls
        = f.select :supported_ocr_types, options_for_select(@config.mime_types, @config.supported_ocr_types), {}, {:multiple => true}
    .control-group
      .controls
        %i Note: Tesseract will be used if the ABBYY details are not provided.
    .control-group
      = f.label :ocr_cloud_host, "ABBYY Host", class: "control-label"
      .controls
        = f.text_field :ocr_cloud_host, placeholder: "eg. cloud.ocrsdk.com"
    .control-group
      = f.label :ocr_cloud_id, "ABBYY App Name", class: "control-label"
      .controls
        = f.text_field :ocr_cloud_id, placeholder: "eg. DC21 OCR"
    .control-group
      = f.label :ocr_cloud_token, "ABBYY Password", class: "control-label"
      .controls
        = f.text_field :ocr_cloud_token, placeholder: "This will be emailed to you when you register an application with ABBYY."

    %h2 Edit Speech Recognition Processing
    .control-group
      = f.label :auto_sr_on_upload, "Auto SR on Upload", class: "control-label"
      .controls
        = f.check_box :auto_sr_on_upload, {}, 'true', 'false'
    .control-group
      = f.label :auto_sr_regex, "Auto SR Regular Expression", class: "control-label"
      .controls
        = f.text_field :auto_sr_regex
    .control-group#sr_types
      = f.label :supported_sr_types, "SR Supported MIME Types", class: "control-label"
      .controls
        = f.select :supported_sr_types, options_for_select(@config.mime_types, @config.supported_sr_types), {}, {:multiple => true, :include_hidden => true}
    .form-actions
      .actions-pre
        = cancel_button 'Cancel', admin_config_path
      .actions
        = f.submit "Update"

:javascript
  $('#system_configuration_supported_ocr_types').select2();
  $('#system_configuration_supported_sr_types').select2();
