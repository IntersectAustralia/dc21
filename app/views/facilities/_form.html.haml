= form_for(@facility) do |f|
  - if edit_mode
    %h2 Edit Facility
  - else
    %h2 New Facility

  .formerror= render "shared/error_messages", :target => @facility

  .control-group
    = f.label :name, class: 'control-label'
    .controls
      = required
      = f.text_field :name

  .control-group
    = f.label :code, class: 'control-label'
    .controls
      = required
      = f.text_field :code

  .control-group
    = f.label :description, class: 'control-label'
    .controls
      = f.text_area :description

  .control-group
    .controls
      .record Point location or Top Left Corner of rectangle

  .control-group
    = f.label :a_lat, 'Latitude', class: 'control-label'
    .controls
      = f.text_field :a_lat, :placeholder => "Decimal, -90.0 to 90.0"

  .control-group
    = f.label :a_long, 'Longitude', class: 'control-label'
    .controls
      = f.text_field :a_long, :placeholder => "Decimal, -180 to 180"

  .control-group
    .controls
      .record Bottom Right Corner of rectangle

  .control-group
    = f.label :b_lat, 'Latitude (bottom right)', class: 'control-label'
    .controls
      = f.text_field :b_lat, :placeholder => "Decimal, -90.0 to 90.0"

  .control-group
    = f.label :b_long, 'Longitude (bottom right)', class: 'control-label'
    .controls
      = f.text_field :b_long, :placeholder => "Decimal, -180 to 180"

  .control-group
    = label_tag :contacts_select, 'Contacts', class: 'control-label'
    .controls
      = required
      %span.input
      = select_tag :contacts_select,  options_from_collection_for_select(User.approved, :id, :email), :include_blank => true
      = link_to 'Add', '#', :class => "bluebutton", :id => 'add_contact'
      %p.details
        Choose from the list above, and select via radio button the primary contact. 
      %ul#contacts_list
        - if @facility.primary_contact.present?
          - contact = @facility.primary_contact
          - #TODO refactor this out into a helper
          -#= build_contact_fields(contact)
          %li{:id => "contact_#{contact.id}"}
            = hidden_field_tag "contact_ids[]", contact.id
            = radio_button_tag "contact_primary", contact.id, :checked => true
            %span= contact.email
            = link_to "Delete", '#', :class => 'delete_contact delete_link'

        - if @facility.contacts.present?
          - @facility.contacts.each do |contact|
            - #TODO refactor this out into a helper
            -#= build_contact_fields(contact)
            %li{:id => "contact_#{contact.id}"}
              = hidden_field_tag "contact_ids[]", contact.id
              = radio_button_tag "contact_primary", contact.id
              %span= contact.email
              = link_to "Delete", '#', :class => 'delete_contact delete_link'




  .form-actions
    - if edit_mode
      .actions-pre
        = cancel_button 'Cancel', facility_path("#{@facility.id}"), :class => "cancelbutton"
      .actions
        = f.submit "Update", :class => ""
    -else
      .actions-pre
        = cancel_button 'Cancel', facilities_path, :class => "cancelbutton"
      .actions
        = f.submit "Save Facility", :class => ""
