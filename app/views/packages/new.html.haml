- content_for :breadcrumb  do
  %h1 Data / New Package

.container
  -if current_user.cart_items.empty?
    %h3 You cannot create a package because your cart is empty.
    .form-actions
      .actions-pre
        - if @back_request
          = cancel_button "Back", "#", {:id => "package_back"}
        - else
          = cancel_button "Back", data_files_path
  -else
    %h2 New Package
    = form_for(@package, :url => packages_path) do |f|
      = render "shared/error_messages", :target => @package

      .control-group
        = f.label :filename, "Filename", class: "control-label"
        .controls
          = required
          = f.text_field :filename
          %span .zip
      .control-group
        = f.label :experiment_id, "Experiment", class: "control-label"
        .controls
          = required
          = f.select :experiment_id, option_groups_from_collection_for_select(grouped_experiments_for_select, :experiments, :name, :id, :name, @package.experiment_id), :include_blank => true
      .control-group
        = f.label :title, "Title", class: "control-label"
        .controls
          = required
          = f.text_area :title
      .control-group
        .control-label ID
      .control-group
        = f.label :file_processing_description, "Description", class: "control-label"
        .controls
          = f.text_area :file_processing_description
      .control-group#tags
        .control-label Tags
        .controls
          - if tags.empty?
            .record None
          - tags.each do |tag|
            %label.checkbox
              = check_box_tag "tags[]", tag.id, @package.tag_ids.include?(tag.id), :id => "tag_#{tag.id}"
              = label_tag "tag_#{tag.id}", tag.name
      .control-group
        .date-format yyyy-mm-dd
      .control-group
        = label_tag "package_start_time", "Start Time", class: "control-label", :for => "package_start_time"
        .controls
          - if @package.start_time_is_not_nil?
            = text_field_tag "date[start_time]", @package.start_time.utc.to_date,  :id => "package_start_time", :datepicker => true
            .show{:id => "package_start_container"}
              = select_hour @package.start_time.utc, {:field_name => "start_hr"}, {:id => "start_hr"}
              = select_minute @package.start_time.utc, {:field_name => "start_min"}, {:id => "start_min"}
              = select_second @package.start_time.utc, {:field_name => "start_sec"}, {:id => "start_sec"}
          - else
            = text_field_tag "date[start_time]", @package.start_time, :id => "package_start_time", :datepicker => true
            .show{:id => "package_start_container"}
              = select_hour @package.start_time, {:field_name => "start_hr"}
              = select_minute @package.start_time, {:field_name => "start_min"}
              = select_second @package.start_time, {:field_name => "start_sec"}
      .control-group
        = label_tag "package_end_time", "End Time", class: "control-label", :for => "package_end_time"
        .controls
          -if @package.end_time_is_not_nil?
            = text_field_tag "date[end_time]", @package.end_time.utc.to_date, :id => "package_end_time", :datepicker => true
            .show{:id => "package_end_container"}
              = select_hour @package.end_time.utc, {:field_name => "end_hr"}
              = select_minute @package.end_time.utc, {:field_name => "end_min"}
              = select_second @package.end_time.utc, {:field_name => "end_sec"}
          - else
            = text_field_tag "date[end_time]", @package.end_time, :id => "package_end_time", :datepicker => true
            .show{:id => "package_end_container"}
              = select_hour @package.end_time, {:field_name => "end_hr"}
              = select_minute @package.end_time, {:field_name => "end_min"}
              = select_second @package.end_time, {:field_name => "end_sec"}
      .control-group
        .controls
          %label.checkbox
            = check_box_tag "run_in_background", true, false, :id => "run_in_background"
            = label_tag "run_in_background", "Run in background?"
      .form-actions
        .actions
          - if @back_request
            = cancel_button "Back", "#", {:id => "package_back"}
          - else
            = cancel_button "Back", data_files_path
          = f.submit "Create Package"


