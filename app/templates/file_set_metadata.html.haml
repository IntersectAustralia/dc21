!!!

- # this is the template for the README.html file that is packaged on download
- # you have access to the following locals:
- # "data_files" which is an array of DataFile (rails model) objects chosen for the package
- # "facilities" which is an array of Facility (rails model) objects associated with the chosen data files
- # "experiments" which is an array of Experiment (rails model) objects for the chosen data files
- # "metadata_url_helper" which is a MetadataUrlHelper object that can be used to find the URLs for the models
%html
  %head

  %body

    %h1 Summary
    %table
      %thead
        %tr
          %th Name
          %th Type
          %th Experiment
          %th Facility
          %th Download
          %th View
      %tbody
        - data_files.each do |data_file|
          %tr
            %td
              %a{:href => "#datafile_#{data_file.id}"}= data_file.filename
            %td= data_file.file_processing_status
            - if data_file.experiment
              %td
                %a{:href => "#experiment_#{data_file.experiment_id}"}= data_file.experiment_name
            - else
              %td= data_file.experiment_name
            - if data_file.facility
              %td
                %a{:href => "#facility_#{data_file.facility.id}"}= data_file.facility_name
            - else
              %td
            %td
              %a{:href => metadata_url_helper.data_file_download_url(data_file)} Download
            %td
              %a{:href => metadata_url_helper.data_file_url(data_file)} View

    %h1 Files
    - data_files.each do |data_file|
      %a{:name => "datafile_#{data_file.id}"}
      %section
        %h2= data_file.filename
        
        %table
          %tr
            %td Name
            %td= data_file.filename
          %tr
            %td Type
            %td= data_file.file_processing_status
          %tr
            %td File format
            %td= data_file.format_for_display
          %tr
            %td Description
            %td= data_file.file_processing_description
          %tr
            %td Tags
            %td= data_file.tags.map { |tag| tag.name }.join(", ")
          %tr
            %td Experiment
            %td= data_file.experiment_name
          %tr
            %td Facility
            %td= data_file.facility_name
          - unless data_file.known_format?
            - if data_file.start_time
              %tr
                %td Start time
                %td= data_file.start_time.utc.to_s(:with_seconds)
            - if data_file.end_time
              %tr
                %td End time
                %td= data_file.end_time.utc.to_s(:with_seconds)
          %tr
            %td Date added
            %td= data_file.created_at.to_s(:with_time)
          %tr
            %td Added by
            %td= data_file.created_by.full_name
          %tr
            %td Persistent URL
            %td
              %a{:href => metadata_url_helper.data_file_url(data_file)}= metadata_url_helper.data_file_url(data_file)

        - if data_file.known_format?
          %h3 Information From The File
          %table
            %tr
              %td Start time
              %td= data_file.start_time.nil? ? "" : data_file.start_time.utc.to_s(:with_seconds)
            %tr
              %td End time
              %td= data_file.end_time.nil? ? "" : data_file.end_time.utc.to_s(:with_seconds)
            %tr
              %td Sample interval
              %td= data_file.interval.nil? ? "" : ActionController::Base.helpers.distance_of_time_in_words(data_file.interval)

            - data_file.metadata_items.order(:key).each do |item|
              %tr
                %td= item.key.humanize
                %td= item.value

        - unless data_file.column_details.empty?
          %h3 Columns
          %table
            %thead
              %tr
                %th Column
                %th Column Mapping
                %th Unit
                %th Measurement Type
            %tbody
              - data_file.column_details.each do |column_details|
                %tr
                  %td= column_details.name
                  %td= column_details.get_mapped_name
                  %td= column_details.unit
                  %td= column_details.data_type

    %h1 Experiments
    - experiments.each do |experiment|
      %a{:name => "experiment_#{experiment.id}"}
      %section
        %h2= experiment.name

        %table
          %tr
            %td Parent
            %td= experiment.parent_name
          %tr
            %td Name
            %td= experiment.name
          %tr
            %td Description
            %td= experiment.description
          %tr
            %td Start date
            %td= experiment.start_date.to_s(:date_only)
          %tr
            %td End date
            %td= experiment.end_date.try(:to_s, :date_only)
          %tr
            %td Subject
            %td= experiment.subject
          %tr
            %td Access Rights
            %td= "#{experiment.access_rights_description} (#{experiment.access_rights})"
          %tr
            %td FOR codes
            %td= experiment.experiment_for_codes.map { |for_code| for_code.name }.join("<br/>")
          %tr
            %td Persistent URL
            %td
              %a{:href => metadata_url_helper.experiment_url(experiment)}= metadata_url_helper.experiment_url(experiment)

        - unless experiment.experiment_parameters.empty?
          %h3 Experiment Parameters
          %table
            %thead
              %tr
                %th Category
                %th Subcategory
                %th Modification
                %th Amount
                %th Units
                %th Comments
            %tbody
              - experiment.experiment_parameters.each do |param|
                %tr
                  %td= param.parameter_category.name
                  %td= param.parameter_sub_category.name
                  %td= param.parameter_modification.name
                  %td= param.amount
                  %td= param.parameter_unit ? param.parameter_unit.name : ""
                  %td= param.comments

    %h1 Facilities
    - facilities.each do |facility|
      %a{:name => "facility_#{facility.id}"}
      %section
        %h2= facility.name

        %table
          %tr
            %td Name
            %td= facility.name
          %tr
            %td Code
            %td= facility.code
          %tr
            %td Description
            %td= facility.description
          %tr
            %td Location
            %td= facility.location
          %tr
            %td Primary Contact
            %td= facility.primary_contact ? "#{facility.primary_contact.full_name} (#{facility.primary_contact.email})" : ""
          %tr
            %td Persistent URL
            %td
              %a{:href => metadata_url_helper.facility_url(facility)}= metadata_url_helper.facility_url(facility)
