#!/usr/bin/ruby -w

class SRWorker
  include Resque::Plugins::Status

  @queue = :sr_queue

  def perform
    output_file = DataFile.find(options['output_id'])
    parent = DataFile.find(options['parent_id'])

    @config = SystemConfiguration.instance
    begin
      job = Resque::Plugins::Status::Hash.get(output_file.uuid)
      output_file.transfer_status = job.status.to_s.upcase

      output_file.save

      File.open(output_file.path, "w:UTF-8") {|f| f.write("SR has not been implemented yet") }

      output_file.file_processing_description = "This file was automatically generated by SR. Source file name: #{parent.filename}, source file id: #{output_file.id}"
      output_file.file_size = File.size(output_file.path)
      output_file.save

      output_file.mark_as_complete

    rescue Exception => e
      output_file.mark_as_failed
      # Catch exception, set transfer status and rethrow so we can see what went wrong in the overview page
      output_file.file_processing_description = "SR ERROR: #{e.message}"
      output_file.file_processing_status = DataFile::STATUS_ERROR
      output_file.save
      Rails.logger.info "SR ERROR: #{e.message}"
      raise e
    end
  end

end
